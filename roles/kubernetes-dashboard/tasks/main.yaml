- name: install kubernetes-dashboard
  kubernetes.core.k8s:
    state: present
    namespace: kubernetes-dashboard
    definition: '{{ item }}'
  with_items: '{{ lookup("url", "https://raw.githubusercontent.com/kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml", split_lines=False) | from_yaml_all | list }}'
  when: item is not none

- name: patch kubernetes-dashboard service to LoadBalancer
  kubernetes.core.k8s:
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: kubernetes-dashboard
      spec:
        type: LoadBalancer

- name: create serviceaccount (ns kubernetes-dashboard)
  kubernetes.core.k8s:
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: admin-user

- name: create clusterrolebinding (ns kubernetes-dashboard)
  kubernetes.core.k8s:
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: admin-user
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: admin-user
        namespace: kubernetes-dashboard

- name: get admin-user serviceaccount details (ns kubernetes-dashboard)
  kubernetes.core.k8s_info:
    kind: ServiceAccount
    namespace: kubernetes-dashboard
    name: admin-user
  register: sa_admin_user

- name: get admin-user token details (ns kubernetes-dashboard)
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: kubernetes-dashboard
    name: "{{ sa_admin_user.resources[0].secrets[0].name }}"
  register: admin_user_token_data

- name: fetch serviceaccount token (ns kubernetes-dashboard)
  set_fact:
    admin_user_token: "{{ admin_user_token_data.resources[0].data.token | b64decode }}"

- name: get service details (ns kubernetes-dashboard)
  kubernetes.core.k8s_info:
    kind: Service
    namespace: kubernetes-dashboard
    name: kubernetes-dashboard
  register: service_kubernetes_dashboard_data

- name: fetch external ip of service (ns kubernetes-dashboard)
  set_fact:
    kubernetes_dashboard_external_ip: "{{ service_kubernetes_dashboard_data.resources[0].status.loadBalancer.ingress[0].ip }}"

- debug:
    msg: "kubernetes-dashboard available at https://{{ kubernetes_dashboard_external_ip }} with token: {{ admin_user_token }}"
