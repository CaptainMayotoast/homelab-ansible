- name: create 'certmanager' namespace
  kubernetes.core.k8s:
    name: certmanager
    api_version: v1
    kind: Namespace
    state: present

- name: add certmanager helm repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io

- name: install the cert-manager CustomResourceDefinition resources
  kubernetes.core.k8s:
    # https://stackoverflow.com/questions/70612435/how-to-run-cmd-kubectl-apply-using-ansible-properly
    state: present
    src: https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.crds.yaml

- name: install certmanager
  kubernetes.core.helm:
    name: certmanager
    namespace: certmanager
    chart_ref: "jetstack/cert-manager"
    create_namespace: false
    # purge: yes
    update_repo_cache: yes
    # values:
    #   installCRDs: true

- name: setup production issuer
  kubernetes.core.k8s:
    state: present
    namespace: certmanager
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: lets-encrypt
      spec:
        acme:
          email:  schwartz_alex@pm.me
          server: https://acme-v02.api.letsencrypt.org/directory
          privateKeySecretRef:
            name: lets-encrypt-prod
          solvers:
          - http01:
              ingress:
                class: public

- name: setup staging issuer
  kubernetes.core.k8s:
    state: present
    namespace: certmanager
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: lets-encrypt-staging
      spec:
        acme:
          server: https://acme-staging-v02.api.letsencrypt.org/directory
          email: schwartz_alex@pm.me
          privateKeySecretRef:
            name: lets-encrypt-staging
          solvers:
          - http01:
              ingress:
                class:  public
